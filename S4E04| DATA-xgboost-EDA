{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":72489,"databundleVersionId":8096274,"sourceType":"competition"}],"dockerImageVersionId":30674,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/akokoo/s4e04-data-xgboost-eda?scriptVersionId=172822748\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import pandas as pd\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nimport numpy as np\nfrom sklearn.metrics import mean_squared_log_error\nfrom sklearn.preprocessing import LabelEncoder","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-02T02:42:21.328272Z","iopub.execute_input":"2024-04-02T02:42:21.328859Z","iopub.status.idle":"2024-04-02T02:42:23.416306Z","shell.execute_reply.started":"2024-04-02T02:42:21.328832Z","shell.execute_reply":"2024-04-02T02:42:23.415273Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_data = pd.read_csv('/kaggle/input/playground-series-s4e4/train.csv')\nprint('========train_data=======')\ntrain_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-02T03:07:38.16873Z","iopub.execute_input":"2024-04-02T03:07:38.169588Z","iopub.status.idle":"2024-04-02T03:07:38.28799Z","shell.execute_reply.started":"2024-04-02T03:07:38.169556Z","shell.execute_reply":"2024-04-02T03:07:38.286975Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print('======type=========')\ntrain_data.info()\n# print(train_data.dtypes)","metadata":{"execution":{"iopub.status.busy":"2024-04-02T03:07:52.383794Z","iopub.execute_input":"2024-04-02T03:07:52.384538Z","iopub.status.idle":"2024-04-02T03:07:52.404405Z","shell.execute_reply.started":"2024-04-02T03:07:52.384506Z","shell.execute_reply":"2024-04-02T03:07:52.40349Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_data.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-02T03:08:29.441165Z","iopub.execute_input":"2024-04-02T03:08:29.442009Z","iopub.status.idle":"2024-04-02T03:08:29.460619Z","shell.execute_reply.started":"2024-04-02T03:08:29.441979Z","shell.execute_reply":"2024-04-02T03:08:29.45962Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_data.describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-02T03:39:50.513418Z","iopub.execute_input":"2024-04-02T03:39:50.514068Z","iopub.status.idle":"2024-04-02T03:39:50.566846Z","shell.execute_reply.started":"2024-04-02T03:39:50.514036Z","shell.execute_reply":"2024-04-02T03:39:50.565982Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_data = pd.get_dummies(train_data, columns=['Sex'])","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:27.846896Z","iopub.execute_input":"2024-04-02T02:42:27.847644Z","iopub.status.idle":"2024-04-02T02:42:27.877279Z","shell.execute_reply.started":"2024-04-02T02:42:27.847614Z","shell.execute_reply":"2024-04-02T02:42:27.876525Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X = train_data.drop('Rings', axis=1)\ny = train_data['Rings']\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:27.878791Z","iopub.execute_input":"2024-04-02T02:42:27.879066Z","iopub.status.idle":"2024-04-02T02:42:27.897946Z","shell.execute_reply.started":"2024-04-02T02:42:27.879043Z","shell.execute_reply":"2024-04-02T02:42:27.89721Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"label_encoder = LabelEncoder()","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:28.440307Z","iopub.execute_input":"2024-04-02T02:42:28.441148Z","iopub.status.idle":"2024-04-02T02:42:28.444938Z","shell.execute_reply.started":"2024-04-02T02:42:28.441115Z","shell.execute_reply":"2024-04-02T02:42:28.443964Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model = xgb.XGBRegressor(objective ='reg:squarederror', random_state=42)\n\nmodel.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:28.446833Z","iopub.execute_input":"2024-04-02T02:42:28.447336Z","iopub.status.idle":"2024-04-02T02:42:28.981674Z","shell.execute_reply.started":"2024-04-02T02:42:28.447291Z","shell.execute_reply":"2024-04-02T02:42:28.980833Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred = model.predict(X_valid)","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:28.984957Z","iopub.execute_input":"2024-04-02T02:42:28.985488Z","iopub.status.idle":"2024-04-02T02:42:29.030003Z","shell.execute_reply.started":"2024-04-02T02:42:28.985442Z","shell.execute_reply":"2024-04-02T02:42:29.029296Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"rmse = mean_squared_error(y_valid, y_pred, squared=False)\nprint(\"Validation RMSE:\", rmse)","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:29.031959Z","iopub.execute_input":"2024-04-02T02:42:29.032529Z","iopub.status.idle":"2024-04-02T02:42:29.038241Z","shell.execute_reply.started":"2024-04-02T02:42:29.032496Z","shell.execute_reply":"2024-04-02T02:42:29.03738Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_data = pd.read_csv('/kaggle/input/playground-series-s4e4/test.csv')\ntest_data = pd.get_dummies(test_data, columns=['Sex'])\ntest_predictions = model.predict(test_data)","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:29.039208Z","iopub.execute_input":"2024-04-02T02:42:29.039704Z","iopub.status.idle":"2024-04-02T02:42:29.284291Z","shell.execute_reply.started":"2024-04-02T02:42:29.039659Z","shell.execute_reply":"2024-04-02T02:42:29.283413Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission = pd.DataFrame({'Prediction': test_predictions})\nsubmission.to_csv('submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:29.945121Z","iopub.execute_input":"2024-04-02T02:42:29.945966Z","iopub.status.idle":"2024-04-02T02:42:30.044398Z","shell.execute_reply.started":"2024-04-02T02:42:29.94593Z","shell.execute_reply":"2024-04-02T02:42:30.043532Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"rmsle = np.sqrt(mean_squared_log_error(1 + y_valid, 1 + y_pred))\nprint(\"Validation RMSLE:\", rmsle)","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:30.045827Z","iopub.execute_input":"2024-04-02T02:42:30.046113Z","iopub.status.idle":"2024-04-02T02:42:30.052984Z","shell.execute_reply.started":"2024-04-02T02:42:30.04609Z","shell.execute_reply":"2024-04-02T02:42:30.052037Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sub=pd.read_csv('/kaggle/working/submission.csv')\nsub.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:30.678289Z","iopub.execute_input":"2024-04-02T02:42:30.679164Z","iopub.status.idle":"2024-04-02T02:42:30.699365Z","shell.execute_reply.started":"2024-04-02T02:42:30.679128Z","shell.execute_reply":"2024-04-02T02:42:30.698525Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission_df = pd.DataFrame({\n    'id': test_data['id'], \n    'Rings': test_predictions \n})\nsubmission_df.to_csv('submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:30.701231Z","iopub.execute_input":"2024-04-02T02:42:30.701534Z","iopub.status.idle":"2024-04-02T02:42:30.82925Z","shell.execute_reply.started":"2024-04-02T02:42:30.701506Z","shell.execute_reply":"2024-04-02T02:42:30.82852Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# TURNING MODEL ","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split, GridSearchCV\nlabel_encoder = LabelEncoder()\nmodel = xgb.XGBRegressor(objective='reg:squarederror', random_state=42)\n\n\nparam_grid = {\n    'n_estimators': [100, 200, 300],\n    'max_depth': [3, 6, 9],\n    'learning_rate': [0.1, 0.01, 0.001]\n}\n\n\ngrid_search = GridSearchCV(estimator=model, param_grid=param_grid, cv=3, scoring='neg_mean_squared_error')\ngrid_search.fit(X_train, y_train)\n\n\nbest_params = grid_search.best_params_\nprint(\"BEST:\", best_params)\n\n\nbest_model = xgb.XGBRegressor(objective='reg:squarederror', random_state=42, **best_params)\nbest_model.fit(X_train, y_train)\n\n\ny_pred = best_model.predict(X_valid)\n\nrmse = mean_squared_error(y_valid, y_pred, squared=False)\nprint(\"RMSE:\", rmse)\n\nrmsle = np.sqrt(mean_squared_log_error(1 + y_valid, 1 + y_pred))\nprint(\"RMSLE:\", rmsle)","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:42:30.830226Z","iopub.execute_input":"2024-04-02T02:42:30.830484Z","iopub.status.idle":"2024-04-02T02:43:55.067639Z","shell.execute_reply.started":"2024-04-02T02:42:30.830451Z","shell.execute_reply":"2024-04-02T02:43:55.066868Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_data = pd.read_csv('/kaggle/input/playground-series-s4e4/train.csv', engine='python')\n\ntrain_data = pd.get_dummies(train_data, columns=['Sex'])\n\nX = train_data.drop('Rings', axis=1)\ny = train_data['Rings']\n\nbest_model = xgb.XGBRegressor(objective='reg:squarederror', random_state=42, learning_rate=0.1, max_depth=6, n_estimators=100)\nbest_model.fit(X, y)\n\ntest_data = pd.read_csv('/kaggle/input/playground-series-s4e4/test.csv', engine='python')\n\ntest_data = pd.get_dummies(test_data, columns=['Sex'])\n\ntest_predictions = best_model.predict(test_data)\n\ntest_predictions_rounded = np.round(test_predictions).astype(int)\n\nsubmission_df = pd.DataFrame({\n    'id': test_data['id'],\n    'Rings': test_predictions_rounded\n})\n\nsubmission_df.to_csv('submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:43:55.068857Z","iopub.execute_input":"2024-04-02T02:43:55.069305Z","iopub.status.idle":"2024-04-02T02:43:57.475902Z","shell.execute_reply.started":"2024-04-02T02:43:55.069279Z","shell.execute_reply":"2024-04-02T02:43:57.475086Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sub=pd.read_csv('/kaggle/working/submission.csv')\nprint(sub.head())","metadata":{"execution":{"iopub.status.busy":"2024-04-02T02:47:13.033625Z","iopub.execute_input":"2024-04-02T02:47:13.03444Z","iopub.status.idle":"2024-04-02T02:47:13.054271Z","shell.execute_reply.started":"2024-04-02T02:47:13.034408Z","shell.execute_reply":"2024-04-02T02:47:13.053455Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}