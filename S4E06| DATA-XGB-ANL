{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/akokoo/s4e06-data-xgb-eda?scriptVersionId=181194747\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"143c65e0","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-06-03T05:46:27.025473Z","iopub.status.busy":"2024-06-03T05:46:27.024714Z","iopub.status.idle":"2024-06-03T05:46:28.944285Z","shell.execute_reply":"2024-06-03T05:46:28.943522Z"},"papermill":{"duration":1.926046,"end_time":"2024-06-03T05:46:28.946514","exception":false,"start_time":"2024-06-03T05:46:27.020468","status":"completed"},"tags":[]},"outputs":[],"source":["import pandas as pd\n","import xgboost as xgb\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.metrics import accuracy_score"]},{"cell_type":"code","execution_count":2,"id":"998df351","metadata":{"execution":{"iopub.execute_input":"2024-06-03T05:46:28.953169Z","iopub.status.busy":"2024-06-03T05:46:28.952762Z","iopub.status.idle":"2024-06-03T05:46:29.528406Z","shell.execute_reply":"2024-06-03T05:46:29.527541Z"},"papermill":{"duration":0.58169,"end_time":"2024-06-03T05:46:29.530933","exception":false,"start_time":"2024-06-03T05:46:28.949243","status":"completed"},"tags":[]},"outputs":[],"source":["train_data = pd.read_csv('/kaggle/input/playground-series-s4e6/train.csv')\n","test_data = pd.read_csv('/kaggle/input/playground-series-s4e6/test.csv')"]},{"cell_type":"code","execution_count":3,"id":"ad0aa81d","metadata":{"execution":{"iopub.execute_input":"2024-06-03T05:46:29.537966Z","iopub.status.busy":"2024-06-03T05:46:29.537613Z","iopub.status.idle":"2024-06-03T05:46:29.581967Z","shell.execute_reply":"2024-06-03T05:46:29.580945Z"},"papermill":{"duration":0.049929,"end_time":"2024-06-03T05:46:29.583932","exception":false,"start_time":"2024-06-03T05:46:29.534003","status":"completed"},"tags":[]},"outputs":[],"source":["label_encoder = LabelEncoder()\n","train_data['Target'] = label_encoder.fit_transform(train_data['Target'])\n","\n","X = train_data.drop(columns=['id', 'Target'])\n","y = train_data['Target']\n","\n","X_test = test_data.drop(columns=['id'])"]},{"cell_type":"code","execution_count":4,"id":"6ad0adbe","metadata":{"execution":{"iopub.execute_input":"2024-06-03T05:46:29.590174Z","iopub.status.busy":"2024-06-03T05:46:29.58987Z","iopub.status.idle":"2024-06-03T05:46:29.60998Z","shell.execute_reply":"2024-06-03T05:46:29.609269Z"},"papermill":{"duration":0.025361,"end_time":"2024-06-03T05:46:29.611907","exception":false,"start_time":"2024-06-03T05:46:29.586546","status":"completed"},"tags":[]},"outputs":[],"source":["X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)"]},{"cell_type":"code","execution_count":5,"id":"92d822ec","metadata":{"execution":{"iopub.execute_input":"2024-06-03T05:46:29.618194Z","iopub.status.busy":"2024-06-03T05:46:29.617881Z","iopub.status.idle":"2024-06-03T05:46:32.033136Z","shell.execute_reply":"2024-06-03T05:46:32.031246Z"},"papermill":{"duration":2.420635,"end_time":"2024-06-03T05:46:32.035189","exception":false,"start_time":"2024-06-03T05:46:29.614554","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n","              colsample_bylevel=None, colsample_bynode=None,\n","              colsample_bytree=None, device=None, early_stopping_rounds=None,\n","              enable_categorical=False, eval_metric=&#x27;mlogloss&#x27;,\n","              feature_types=None, gamma=None, grow_policy=None,\n","              importance_type=None, interaction_constraints=None,\n","              learning_rate=None, max_bin=None, max_cat_threshold=None,\n","              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,\n","              max_leaves=None, min_child_weight=None, missing=nan,\n","              monotone_constraints=None, multi_strategy=None, n_estimators=None,\n","              n_jobs=None, num_parallel_tree=None, objective=&#x27;multi:softprob&#x27;, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n","              colsample_bylevel=None, colsample_bynode=None,\n","              colsample_bytree=None, device=None, early_stopping_rounds=None,\n","              enable_categorical=False, eval_metric=&#x27;mlogloss&#x27;,\n","              feature_types=None, gamma=None, grow_policy=None,\n","              importance_type=None, interaction_constraints=None,\n","              learning_rate=None, max_bin=None, max_cat_threshold=None,\n","              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,\n","              max_leaves=None, min_child_weight=None, missing=nan,\n","              monotone_constraints=None, multi_strategy=None, n_estimators=None,\n","              n_jobs=None, num_parallel_tree=None, objective=&#x27;multi:softprob&#x27;, ...)</pre></div></div></div></div></div>"],"text/plain":["XGBClassifier(base_score=None, booster=None, callbacks=None,\n","              colsample_bylevel=None, colsample_bynode=None,\n","              colsample_bytree=None, device=None, early_stopping_rounds=None,\n","              enable_categorical=False, eval_metric='mlogloss',\n","              feature_types=None, gamma=None, grow_policy=None,\n","              importance_type=None, interaction_constraints=None,\n","              learning_rate=None, max_bin=None, max_cat_threshold=None,\n","              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,\n","              max_leaves=None, min_child_weight=None, missing=nan,\n","              monotone_constraints=None, multi_strategy=None, n_estimators=None,\n","              n_jobs=None, num_parallel_tree=None, objective='multi:softprob', ...)"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["model = xgb.XGBClassifier(use_label_encoder=False, eval_metric='mlogloss')\n","model.fit(X_train, y_train)"]},{"cell_type":"code","execution_count":6,"id":"201fa05b","metadata":{"execution":{"iopub.execute_input":"2024-06-03T05:46:32.045982Z","iopub.status.busy":"2024-06-03T05:46:32.045132Z","iopub.status.idle":"2024-06-03T05:46:32.113974Z","shell.execute_reply":"2024-06-03T05:46:32.112792Z"},"papermill":{"duration":0.076335,"end_time":"2024-06-03T05:46:32.115827","exception":false,"start_time":"2024-06-03T05:46:32.039492","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["{0.8331808677469943}\n"]}],"source":["y_pred = model.predict(X_val)\n","accuracy = accuracy_score(y_val, y_pred)\n","print({accuracy})"]},{"cell_type":"code","execution_count":7,"id":"f3fdd467","metadata":{"execution":{"iopub.execute_input":"2024-06-03T05:46:32.123939Z","iopub.status.busy":"2024-06-03T05:46:32.123609Z","iopub.status.idle":"2024-06-03T05:46:32.392419Z","shell.execute_reply":"2024-06-03T05:46:32.391405Z"},"papermill":{"duration":0.275405,"end_time":"2024-06-03T05:46:32.394679","exception":false,"start_time":"2024-06-03T05:46:32.119274","status":"completed"},"tags":[]},"outputs":[],"source":["test_preds = model.predict(X_test)\n","test_preds_labels = label_encoder.inverse_transform(test_preds)\n","\n","submission = pd.DataFrame({\n","    'id': test_data['id'],\n","    'Target': test_preds_labels\n","})\n","\n","submission.to_csv('submission.csv', index=False)"]}],"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[{"databundleVersionId":8710574,"sourceId":73290,"sourceType":"competition"}],"dockerImageVersionId":30716,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":8.543097,"end_time":"2024-06-03T05:46:32.8174","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-06-03T05:46:24.274303","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}