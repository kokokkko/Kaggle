{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":73290,"databundleVersionId":8710574,"sourceType":"competition"}],"dockerImageVersionId":30716,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/akokoo/s4e06-data-xgb-eda-model-turning?scriptVersionId=181392491\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import pandas as pd\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import GridSearchCV","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-04T05:49:49.428461Z","iopub.execute_input":"2024-06-04T05:49:49.42915Z","iopub.status.idle":"2024-06-04T05:49:49.434802Z","shell.execute_reply.started":"2024-06-04T05:49:49.429109Z","shell.execute_reply":"2024-06-04T05:49:49.433498Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":"# 1. ***XGB***","metadata":{}},{"cell_type":"code","source":"train_data = pd.read_csv('/kaggle/input/playground-series-s4e6/train.csv')\ntest_data = pd.read_csv('/kaggle/input/playground-series-s4e6/test.csv')","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:49.43662Z","iopub.execute_input":"2024-06-04T05:49:49.437047Z","iopub.status.idle":"2024-06-04T05:49:49.859876Z","shell.execute_reply.started":"2024-06-04T05:49:49.437013Z","shell.execute_reply":"2024-06-04T05:49:49.858913Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"label_encoder = LabelEncoder()\ntrain_data['Target'] = label_encoder.fit_transform(train_data['Target'])\n\nX = train_data.drop(columns=['id', 'Target'])\ny = train_data['Target']\n\nX_test = test_data.drop(columns=['id'])","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:49.861048Z","iopub.execute_input":"2024-06-04T05:49:49.861342Z","iopub.status.idle":"2024-06-04T05:49:49.905903Z","shell.execute_reply.started":"2024-06-04T05:49:49.861317Z","shell.execute_reply":"2024-06-04T05:49:49.905054Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:49.907903Z","iopub.execute_input":"2024-06-04T05:49:49.908209Z","iopub.status.idle":"2024-06-04T05:49:49.938632Z","shell.execute_reply.started":"2024-06-04T05:49:49.908183Z","shell.execute_reply":"2024-06-04T05:49:49.937755Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"model = xgb.XGBClassifier(use_label_encoder=False, eval_metric='mlogloss')\nmodel.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:49.93977Z","iopub.execute_input":"2024-06-04T05:49:49.940081Z","iopub.status.idle":"2024-06-04T05:49:53.329811Z","shell.execute_reply.started":"2024-06-04T05:49:49.940053Z","shell.execute_reply":"2024-06-04T05:49:53.328948Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None, device=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric='mlogloss',\n              feature_types=None, gamma=None, grow_policy=None,\n              importance_type=None, interaction_constraints=None,\n              learning_rate=None, max_bin=None, max_cat_threshold=None,\n              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,\n              max_leaves=None, min_child_weight=None, missing=nan,\n              monotone_constraints=None, multi_strategy=None, n_estimators=None,\n              n_jobs=None, num_parallel_tree=None, objective='multi:softprob', ...)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None, device=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric=&#x27;mlogloss&#x27;,\n              feature_types=None, gamma=None, grow_policy=None,\n              importance_type=None, interaction_constraints=None,\n              learning_rate=None, max_bin=None, max_cat_threshold=None,\n              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,\n              max_leaves=None, min_child_weight=None, missing=nan,\n              monotone_constraints=None, multi_strategy=None, n_estimators=None,\n              n_jobs=None, num_parallel_tree=None, objective=&#x27;multi:softprob&#x27;, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None, device=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric=&#x27;mlogloss&#x27;,\n              feature_types=None, gamma=None, grow_policy=None,\n              importance_type=None, interaction_constraints=None,\n              learning_rate=None, max_bin=None, max_cat_threshold=None,\n              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,\n              max_leaves=None, min_child_weight=None, missing=nan,\n              monotone_constraints=None, multi_strategy=None, n_estimators=None,\n              n_jobs=None, num_parallel_tree=None, objective=&#x27;multi:softprob&#x27;, ...)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"y_pred = model.predict(X_val)\naccuracy = accuracy_score(y_val, y_pred)\n{accuracy}","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:53.331248Z","iopub.execute_input":"2024-06-04T05:49:53.331593Z","iopub.status.idle":"2024-06-04T05:49:53.39043Z","shell.execute_reply.started":"2024-06-04T05:49:53.331553Z","shell.execute_reply":"2024-06-04T05:49:53.389685Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"{0.8331808677469943}"},"metadata":{}}]},{"cell_type":"code","source":"test_preds = model.predict(X_test)\ntest_preds_labels = label_encoder.inverse_transform(test_preds)\n\nsubmission = pd.DataFrame({\n    'id': test_data['id'],\n    'Target': test_preds_labels\n})\n\n# submission.to_csv('submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:53.392713Z","iopub.execute_input":"2024-06-04T05:49:53.393359Z","iopub.status.idle":"2024-06-04T05:49:53.538124Z","shell.execute_reply.started":"2024-06-04T05:49:53.393331Z","shell.execute_reply":"2024-06-04T05:49:53.537337Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":"# 2. ***Model-Turning***","metadata":{}},{"cell_type":"code","source":"# X = train_data.drop(columns=['id', 'Target'])\n# y = train_data['Target']\n\n\n# X_test = test_data.drop(columns=['id'])\n\n# X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# param_grid = {\n#     'n_estimators': [100, 200, 300],\n#     'learning_rate': [0.01, 0.05, 0.1],\n#     'max_depth': [3, 5, 7],\n#     'min_child_weight': [1, 3, 5],\n#     'subsample': [0.6, 0.8, 1.0],\n#     'colsample_bytree': [0.6, 0.8, 1.0]\n# }","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:53.539285Z","iopub.execute_input":"2024-06-04T05:49:53.53975Z","iopub.status.idle":"2024-06-04T05:49:53.54358Z","shell.execute_reply.started":"2024-06-04T05:49:53.539723Z","shell.execute_reply":"2024-06-04T05:49:53.542824Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"# model = xgb.XGBClassifier(use_label_encoder=False, eval_metric='mlogloss')\n\n# grid_search = GridSearchCV(estimator=model, param_grid=param_grid, \n#                            scoring='accuracy', n_jobs=-1, cv=3, verbose=2)\n\n# grid_search.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:53.546213Z","iopub.execute_input":"2024-06-04T05:49:53.546872Z","iopub.status.idle":"2024-06-04T05:49:53.552614Z","shell.execute_reply.started":"2024-06-04T05:49:53.546824Z","shell.execute_reply":"2024-06-04T05:49:53.551701Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"# print(f'Best Parameters: {grid_search.best_params_}')\n# print(f'Best Cross-Validation Accuracy: {grid_search.best_score_}')","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:53.553919Z","iopub.execute_input":"2024-06-04T05:49:53.554227Z","iopub.status.idle":"2024-06-04T05:49:53.56195Z","shell.execute_reply.started":"2024-06-04T05:49:53.554203Z","shell.execute_reply":"2024-06-04T05:49:53.560904Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":"Best Parameters: {'colsample_bytree': 0.6, 'learning_rate': 0.1, 'max_depth': 5, 'min_child_weight': 5, 'n_estimators': 200, 'subsample': 1.0}\nBest Cross-Validation Accuracy: 0.8309537588206588","metadata":{}},{"cell_type":"code","source":"best_params = {\n    'colsample_bytree': 0.6,\n    'learning_rate': 0.1,\n    'max_depth': 5,\n    'min_child_weight': 5,\n    'n_estimators': 200,\n    'subsample': 1.0,\n    'use_label_encoder': False,\n    'eval_metric': 'mlogloss'\n}","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:53.563088Z","iopub.execute_input":"2024-06-04T05:49:53.563346Z","iopub.status.idle":"2024-06-04T05:49:53.572174Z","shell.execute_reply.started":"2024-06-04T05:49:53.563321Z","shell.execute_reply":"2024-06-04T05:49:53.571296Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"best_model = xgb.XGBClassifier(**best_params)\nbest_model.fit(X_train, y_train)\ny_pred = best_model.predict(X_val)\naccuracy = accuracy_score(y_val, y_pred)\n{accuracy}","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:53.573362Z","iopub.execute_input":"2024-06-04T05:49:53.573643Z","iopub.status.idle":"2024-06-04T05:49:57.463561Z","shell.execute_reply.started":"2024-06-04T05:49:53.57362Z","shell.execute_reply":"2024-06-04T05:49:57.462711Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"{0.8350104547830632}"},"metadata":{}}]},{"cell_type":"code","source":"test_preds = best_model.predict(X_test)\ntest_preds_labels = label_encoder.inverse_transform(test_preds)\n\nsubmission = pd.DataFrame({\n    'id': test_data['id'],\n    'Target': test_preds_labels\n})\n\nsubmission.to_csv('submission2.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-06-04T05:49:57.467204Z","iopub.execute_input":"2024-06-04T05:49:57.468127Z","iopub.status.idle":"2024-06-04T05:49:57.7715Z","shell.execute_reply.started":"2024-06-04T05:49:57.468089Z","shell.execute_reply":"2024-06-04T05:49:57.770521Z"},"trusted":true},"execution_count":22,"outputs":[]}]}